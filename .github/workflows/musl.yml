# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Cross Compilation Musl

on: [push]

jobs:

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7 
    steps: 

      - uses: actions/checkout@v3 

      - name: Checkout another tools repo  
        uses: actions/checkout@v3
        with:
            repository: ontodev/wiring.rs
            path: wiring.rs

      - uses: actions/setup-python@v3 

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true

      - name: Setup Bindings 
        run: |
            mv python_module.rs wiring.rs/src/
            rm wiring.rs/Cargo.toml
            mv Cargo.toml wiring.rs/ 
            echo "mod python_module;" >> wiring.rs/src/lib.rs 

      - name: Build Wheels - manylinux
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist -m wiring.rs/Cargo.toml

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist


